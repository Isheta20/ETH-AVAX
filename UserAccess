//SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.7;

contract UserAccess{

    uint public count;
    address public owner;

    constructor(){
        owner = msg.sender;
    }

    modifier access{
        require(owner == msg.sender, "Only can access");
        _;
    }

    function inc() external access{
        count += 2;
    }

    //After running foo the owner will change and so the next time the we will not get 
    //the access and modifier will throw an error
    function foo() external access{
        count -= 1;
        owner =  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2;
    }
}
